@model EVENT_ORGANIZER.Models.Venues

@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
    ViewData["Title"] = "Venues";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="container mt-4">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <div class="card shadow-sm">
                <div class="card-header bg-primary text-white">
                    <h5 class="mb-0">Add New Venue</h5>
                </div>
                <div class="card-body">
                    @using (Html.BeginForm("Venues", "Admin", FormMethod.Post))
                    {
                        <div class="mb-3">
                            <label class="form-label text-dark">Venue Name</label>
                            @Html.TextBoxFor(m => m.VenueName, new { @class = "form-control", required = "required" })
                            @Html.ValidationMessageFor(m => m.VenueName, "", new { @class = "text-danger" })
                        </div>
                        <div class="mb-3">
                            <label class="form-label text-dark">Location</label>
                            @Html.TextBoxFor(m => m.Location, new { @class = "form-control", required = "required" })
                            @Html.ValidationMessageFor(m => m.Location, "", new { @class = "text-danger" })
                        </div>
                        <div class="mb-3">
                            <label class="form-label text-dark">Capacity</label>
                            @Html.DropDownListFor(m => m.Capacity, new List<SelectListItem>
                        {
                        new SelectListItem { Text = "Select Capacity", Value = "" },
                        new SelectListItem { Text = "50", Value = "50" },
                        new SelectListItem { Text = "100", Value = "100" },
                        new SelectListItem { Text = "200", Value = "200" },
                        new SelectListItem { Text = "500", Value = "500" },
                        new SelectListItem { Text = "1000", Value = "1000" }
                        }, new { @class = "form-control", required = "required" })
                            @Html.ValidationMessageFor(m => m.Capacity, "", new { @class = "text-danger" })
                        </div>
                        <div class="d-flex justify-content-end">
                            <button type="submit" class="btn btn-success">Save Venue</button>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>


 @* <div class="card">
    <div class="card-header">
        <h4>Venues List</h4>
    </div>
    <div class="card-body">
        <table class="table table-responsive">
            <thead>
            <th>Name</th>
            <th>Address</th>
            <th>City</th>
            <th>Capacity</th>
            <th>Contact Email</th>
            <th>Contact Phone</th>
            <th>Action</th>
            </thead>
            <tbody>
                @foreach (var item in Model.VenueList)
                {
                    <tr>
                        <td>@item.Name</td>
                        <td>@item.Address</td>
                        <td>@item.City</td>
                        <td>@item.Capacity</td>
                        <td>@item.ContactEmail</td>
                        <td>@item.ContactPhone</td>
                        <td>
                            <a class="btn-warning btn-sm" href="~/Home/VenueEdit?id=@item.VenueId">Edit</a>
                            <a class="btn-danger btn-sm" href="~/Home/VenueDelete?id=@item.VenueId">Delete</a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div> *@
 
@* <!-- Add Venue Modal -->
<div class="modal fade" id="addVenueModal" tabindex="-1" aria-labelledby="addVenueModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addVenueModalLabel">Add New Venue</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                @using (Html.BeginForm( "Venues","Admin", FormMethod.Post))
                {
                    <div class="mb-3">
                        <label class="form-label">Name</label>
                        @Html.TextBoxFor(m => m.Name, new { @class = "form-control", required = "required" })
                        @Html.ValidationMessageFor(m => m.Name, "", new { @class = "text-danger" })
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Address</label>
                        @Html.TextBoxFor(m => m.Address, new { @class = "form-control", required = "required" })
                        @Html.ValidationMessageFor(m => m.Address, "", new { @class = "text-danger" })
                    </div>
                    <div class="mb-3">
                        <label class="form-label">City</label>
                        @Html.TextBoxFor(m => m.City, new { @class = "form-control", required = "required" })
                        @Html.ValidationMessageFor(m => m.City, "", new { @class = "text-danger" })
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Capacity</label>
                        @Html.DropDownListFor(m => m.Capacity, new List<SelectListItem>
                    {
                    new SelectListItem { Text = "Select Capacity", Value = "" },
                    new SelectListItem { Text = "50", Value = "50" },
                    new SelectListItem { Text = "100", Value = "100" },
                    new SelectListItem { Text = "200", Value = "200" },
                    new SelectListItem { Text = "500", Value = "500" },
                    new SelectListItem { Text = "1000", Value = "1000" }
                    }, new { @class = "form-control", required = "required" })
                        @Html.ValidationMessageFor(m => m.Capacity, "", new { @class = "text-danger" })
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Contact Email</label>
                        @Html.TextBoxFor(m => m.ContactEmail, new { @class = "form-control", type = "email", required = "required" })
                        @Html.ValidationMessageFor(m => m.ContactEmail, "", new { @class = "text-danger" })
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Contact Phone</label>
                        @Html.TextBoxFor(m => m.ContactPhone, new { @class = "form-control", type = "tel", required = "required" })
                        @Html.ValidationMessageFor(m => m.ContactPhone, "", new { @class = "text-danger" })
                    </div>
                    <div class="d-flex justify-content-end">
                        <button type="submit" class="btn btn-success">Save Venue</button>
                    </div>
                }



            </div>
        </div>
    </div>
</div>



 *@